name: Create release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
      pre_release:
        description: 'Is this a pre-release?'
        required: true
        default: 'true'
      draft:
        description: 'Draft?'
        required: true
        default: 'true'

jobs:
  build:
    runs-on: windows-latest

    env:
      Solution_Path: src/GameJoltLibrary.sln
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      - name: Restore dependencies GameJoltLibrary
        run: dotnet restore $env:Solution_Path
      - name: Build GameJoltLibrary
        run: dotnet build --no-restore --configuration Release $env:Solution_Path
        
      - name: Build Playnite
        run: msbuild ref\PlayniteRepo\source\Playnite.sln /p:Configuration=Release /p:Platform=x86 /t:Build
          
      - name: pack GameJolLibrary
        run: ref/PlayniteRepo\source\Tools\Playnite.Toolbox\bin\x86\Release\Toolbox.exe pack build/Release build/pack

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: gamejoltlibrary
          path: build/pack

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: gamejoltlibrary
          path: pack

      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ github.event.inputs.version }}
          prerelease: true
          draft: true
          files: |
            pack/*.pext

